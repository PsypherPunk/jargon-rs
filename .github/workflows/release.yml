name: release
on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - id: get_version
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: tar-bin
        run: tar cvf target-bin.tar target/release/jargon
      - uses: actions/upload-artifact@v2
        with:
          name: target-bin
          path: target-bin.tar

  build_deb:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v2
        with:
          name: target-bin
          path: ./
      - name: untar-bin
        run: tar xvf target-bin.tar
      - name: cargo-deb
        run: |
          cargo install cargo-deb
          cargo deb --deb-version ${{ needs.build.outputs.version }}
      - name: tar-deb
        run: tar cvf target-deb.tar target/debian/jargon_${{ needs.build.outputs.version }}_amd64.deb
      - uses: actions/upload-artifact@v2
        with:
          name: target-deb
          path: target-deb.tar

  build_rpm:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v2
        with:
          name: target-bin
          path: ./
      - name: untar-bin
        run: tar xvf target-bin.tar
      - name: cargo-generate-rpm
        run: |
          cargo install cargo-generate-rpm
          cargo build --release
          cargo generate-rpm
      - name: tar-rpm
        run: tar cvf target-rpm.tar target/generate-rpm/jargon-${{ needs.build.outputs.version }}-1.x86_64.rpm
      - uses: actions/upload-artifact@v2
        with:
          name: target-rpm
          path: target-rpm.tar

  make_release:
    runs-on: ubuntu-latest
    needs: [build, build_deb, build_rpm]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: target-deb
          path: ./
      - name: untar-deb
        run: tar xvf target-deb.tar
      - uses: actions/download-artifact@v2
        with:
          name: target-rpm
          path: ./
      - name: untar-rpm
        run: tar xvf target-rpm.tar
      - name: release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          files: |
            target/debian/jargon_${{ needs.build.outputs.version }}_amd64.deb
            target/generate-rpm/jargon-${{ needs.build.outputs.version }}-1.x86_64.rpm
