name: release
on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - id: get_version
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - uses: actions/upload-artifact@v2
        with:
          name: target
          path: target/

  deb:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: target
          path: target/
      - name: cargo-deb
        run: |
          cargo install cargo-deb
          cargo deb
      - uses: actions/upload-artifact@v2
        with:
          name: target
          path: target/

  rpm:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: target
          path: target/
      - name: cargo-rpm
        run: |
          sudo apt-get install -y rpm
          cargo install cargo-rpm
          cargo rpm build
      - uses: actions/upload-artifact@v2
        with:
          name: target
          path: target/

  make_release:
    runs-on: ubuntu-latest
    needs: [deb, rpm]
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false

  upload-deb:
    runs-on: ubuntu-latest
    needs: [build, make_release]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: target
          path: target/
      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.make_release.outputs.upload_url }}
          asset_content_type: application/vnd.debian.binary-package
          asset_path: target/debian/jargon_${{ needs.build.outputs.version }}_amd64.deb
          asset_name: jargon_${{ needs.build.outputs.version }}_amd64.deb

  upload-rpm:
    runs-on: ubuntu-latest
    needs: [build, make_release]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: target
          path: target/
      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.make_release.outputs.upload_url }}
          asset_content_type: application/x-rpm
          asset_path: target/release/rpmbuild/RPMS/x86_64/jargon-${{ needs.build.outputs.version }}-1.x86_64.rpm
          asset_name: jargon-${{ needs.build.outputs.version }}-1.x86_64.rpm

  publish-crate:
    runs-on: ubuntu-latest
    needs: [upload-deb, upload-rpm]
    steps:
      - uses: actions/checkout@v2
      - name: cargo-publish
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
        run: |
          cargo login ${CRATES_TOKEN}
          cargo publish --allow-dirty --no-verify

